# CircleCI 2.1 configuration file
# Check https://circleci.com/docs/2.0/configuration-reference/ for more details
#
# Note: YAML anchors allow an object to be re-used, reducing duplication.
# The ampersand declares an alias for an object, then later the `<<: *name`
# syntax dereferences it.
#
# Define YAML anchors
.global_environment_vars: &global_environment_vars
# PROD_IMAGE_REPO: anchore/anchore-cli-dev
  PROD_IMAGE_REPO: robertprince/anchore-cli-dev
  RELEASE_BRANCHES: 0.2 0.3 0.4 0.5 0.6 0.7
  VERBOSE: true
  TERM: xterm

.attach_workspace: &attach_workspace
  attach_workspace:
    at: /home/circleci/workspace/

.load_docker_image: &load_docker_image
  run:
    name: Load Docker image layer cache
    command: |
      docker load -i "/home/circleci/workspace/caches/${CIRCLE_SHA1}.tar" || true

.ssh_forward_port: &ssh_forward_port
  run:
    name: Forward remote-docker ports for testing
    command: |
      ssh -MS anchore-api -fN4 -L 8228:localhost:8228 remote-docker
      ssh -MS k8s-api -fN4 -L 32768:localhost:32768 remote-docker

.filter_rc_tags: &filter_rc_tags
  branches:
    ignore: /.*/
  tags:
    only: /^v[0-9]+(\.[0-9]+)*-rc[0-9]+$/

.filter_rebuild_tags: &filter_rebuild_tags
  branches:
    ignore: /.*/
  tags:
    only: /^v[0-9]+(\.[0-9]+)*-r[0-9]+$/

.filter_release_branch: &filter_release_branch
  branches:
    only:
      - /^[0-9]+(\.[0-9]+)$/
      - master
      - /^ci-.*/

.filter_semver_tags: &filter_semver_tags
  branches:
    ignore: /.*/
  tags:
    only: /^v[0-9]+(\.[0-9]+)*$/

# Start circleci configuration
version: 2.1
orbs:
  anchore: anchore/anchore-engine@1.6.5

commands:
  run_tests:
    description: |
      Uses make script to run tests
      Saves the tox cache & stores log output as artifacts
    parameters:
      test_type:
        type: string
    steps:
      - restore_cache:
          keys:
            - v1-dependencies-{{ .Branch }}-{{ checksum "requirements.txt" }}
      - run:
          name: run tests
          command: make << parameters.test_type >>
      - save_cache:
          paths:
            - ~/project/.tox
          key: v1-dependencies-{{ .Branch }}-{{ checksum "requirements.txt" }}
      - store_test_results:
          path: .tox/results
      - store_artifacts:
          path: .tox/test-reports.log
          destination: test-reports.log

jobs:
  lint:
    docker:
      - image: anchore/test-infra:python36
    environment: *global_environment_vars
    steps:
      - checkout
      - run:
          name: run linter
          command: make lint

  unit_tests:
    description: Uses make script to run unit tests on specified tox environment
    parameters:
      tox_env:
        type: string
    docker:
      - image: anchore/test-infra:python36
    environment: *global_environment_vars
    steps:
      - checkout
      - run_tests:
          test_type: test-unit TOX_ENV="<< parameters.tox_env >>"

  functional_tests:
    description: Uses make script to run functional tests on specified tox environment
    parameters:
      tox_env:
        type: string
    docker:
      - image: anchore/test-infra:python36
    resource_class: large
    environment: *global_environment_vars
    steps:
      - setup_remote_docker
      - checkout
      - <<: *ssh_forward_port
      - run_tests:
          test_type: test-functional TOX_ENV="<< parameters.tox_env >>"

  build:
    docker:
      - image: anchore/test-infra:python36
    resource_class: large
    environment: *global_environment_vars
    steps:
      - setup_remote_docker
      - checkout
      - run:
          name: Build Docker image
          command: make build
      - run:
          name: Save image to workspace
          command: |
            rm -rf /home/circleci/workspace/caches/
            mkdir -p /home/circleci/workspace/caches/
            docker save -o "/home/circleci/workspace/caches/${CIRCLE_SHA1}.tar" ${CIRCLE_PROJECT_REPONAME}:dev
      - persist_to_workspace:
          root: /home/circleci/workspace/
          paths:
            - caches/*

  e2e_tests:
    docker:
      - image: anchore/test-infra:python36
    resource_class: large
    environment: *global_environment_vars
    steps:
      - setup_remote_docker
      - checkout
      - <<: *attach_workspace
      - <<: *load_docker_image
      - <<: *ssh_forward_port
      - run:
          name: Run e2e tests
          command: make test-e2e

  push_image:
    description: Uses make script to push images to DockerHub - dev, rc, prod
    parameters:
      make_job:
        type: string
    docker:
      - image: anchore/test-infra:python36
    environment: *global_environment_vars
    steps:
      - setup_remote_docker
      - checkout
      - <<: *attach_workspace
      - <<: *load_docker_image
      - run:
          name: Push to Dockerhub
          command: make << parameters.make_job >>

workflows:
  default_workflow:
    jobs:
      - lint
      - unit_tests:
          tox_env: "py27 py36"
      - functional_tests:
          name: functional_tests_latest
          tox_env: py36-anchore_latest
          requires:
            - lint
            - unit_tests
      - functional_tests:
          name: functional_tests_060
          tox_env: py36-anchore_0.6.0
          requires:
            - lint
            - unit_tests
      - functional_tests:
          name: functional_tests_051
          tox_env: py36-anchore_0.5.1
          requires:
            - lint
            - unit_tests
      - build:
          requires:
            - functional_tests_latest
            - functional_tests_060
            - functional_tests_051
      - e2e_tests:
          context: e2e-testing
          filters: *filter_release_branch
          requires:
            - build
      - push_image:
          name: push_dev_image
          make_job: push-dev
          context: dockerhub
          filters: *filter_release_branch
          requires:
            - e2e_tests
      - anchore/image_scan:
          context: dockerhub
          requires:
            - push_dev_image
          image_name: anchore/anchore-cli-dev:${CIRCLE_SHA1}
          private_registry: true
          timeout: '2000'

  rc_image_workflow:
    jobs:
      - build:
          filters: *filter_rc_tags
      - e2e_tests:
          name: rc_e2e_tests
          context: e2e-testing
          filters: *filter_rc_tags
          requires:
            - build
      - push_image:
          name: push_rc_image
          make_job: push-rc
          context: dockerhub
          filters: *filter_rc_tags
          requires:
            - rc_e2e_tests
      - anchore/image_scan:
          context: dockerhub
          filters: *filter_rc_tags
          requires:
            - push_rc_image
          image_name: anchore/anchore-cli-dev:${CIRCLE_TAG}
          private_registry: true
          timeout: '2000'
          policy_failure: true

  prod_image_workflow:
    jobs:
      - e2e_tests:
          name: prod_e2e_tests
          context: e2e-testing
          filters: *filter_semver_tags
      - hold_for_approval:
          type: approval
          filters: *filter_semver_tags
          requires:
            - prod_e2e_tests
      - push_image:
          name: push_prod_image
          make_job: push-prod
          context: dockerhub-prod
          filters: *filter_semver_tags
          requires:
            - hold_for_approval

  rebuild_image_workflow:
    jobs:
      - lint:
          filters: *filter_rebuild_tags
      - unit_tests:
          tox_env: "py27 py36"
          filters: *filter_rebuild_tags
      - functional_tests:
          name: functional_tests_latest
          tox_env: py36-anchore_latest
          filters: *filter_rebuild_tags
          requires:
            - lint
            - unit_tests
      - functional_tests:
          name: functional_tests_060
          tox_env: py36-anchore_0.6.0
          filters: *filter_rebuild_tags
          requires:
            - lint
            - unit_tests
      - functional_tests:
          name: functional_tests_051
          tox_env: py36-anchore_0.5.1
          filters: *filter_rebuild_tags
          requires:
            - lint
            - unit_tests
      - build:
          filters: *filter_rebuild_tags
          requires:
            - functional_tests_latest
            - functional_tests_060
            - functional_tests_051
      - e2e_tests:
          context: e2e-testing
          filters: *filter_rebuild_tags
          requires:
            - build
      - push_image:
          name: push_dev_image
          make_job: push-dev
          context: dockerhub
          filters: *filter_rebuild_tags
          requires:
            - e2e_tests
      - anchore/image_scan:
          name: anchore_image_scan
          context: dockerhub
          filters: *filter_rebuild_tags
          requires:
            - push_dev_image
          image_name: anchore/anchore-cli-dev:${CIRCLE_SHA1}
          private_registry: true
          timeout: '2000'
          policy_failure: true
      - hold_for_approval:
          type: approval
          filters: *filter_rebuild_tags
          requires:
            - anchore_image_scan
      - push_image:
          name: push_rebuild_image
          make_job: push-rebuild
          context: dockerhub-prod
          filters: *filter_rebuild_tags
          requires:
            - hold_for_approval
